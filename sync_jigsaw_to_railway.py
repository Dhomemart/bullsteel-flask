import pymysql  # üî¥ ‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MySQL
import os       # üî¥ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
import datetime  # üî¥ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö timestamp
import time      # üî¥ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤
from dotenv import load_dotenv  # üî¥ ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå .env

load_dotenv()  # üî¥ ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå .env ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•

# üîß ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
def connect_db(host, user, password, database, port):
    return pymysql.connect(
        host=host,
        user=user,
        password=password,
        database=database,
        port=int(port),
        charset='utf8mb4',
        cursorclass=pymysql.cursors.DictCursor
    )

# ‚úÖ Connect to Jigsaw Server (‡∏ï‡πâ‡∏ô‡∏ó‡∏≤‡∏á)
jigsaw_conn = connect_db(
    os.getenv("JIGSAW_HOST"),
    os.getenv("JIGSAW_USER"),
    os.getenv("JIGSAW_PASSWORD"),
    os.getenv("JIGSAW_DATABASE"),
    os.getenv("JIGSAW_PORT")
)

# ‚úÖ Connect to Railway MySQL (‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á)
railway_conn = connect_db(
    os.getenv("RAILWAY_HOST"),
    os.getenv("RAILWAY_USER"),
    os.getenv("RAILWAY_PASSWORD"),
    os.getenv("RAILWAY_DATABASE"),
    os.getenv("RAILWAY_PORT")
)

try:
    start_time = time.time()  # ‚è± ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤

    with jigsaw_conn.cursor() as j_cursor, railway_conn.cursor() as r_cursor:

        # üîç ‡∏´‡∏≤ id ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏ù‡∏±‡πà‡∏á Railway ‡∏Å‡πà‡∏≠‡∏ô
        r_cursor.execute("SELECT MAX(id) AS last_id FROM product")
        last_id = r_cursor.fetchone()["last_id"] or 0

        # üì§ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å Jigsaw ‡∏ó‡∏µ‡πà‡∏°‡∏µ id > ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
        j_cursor.execute("SELECT * FROM product WHERE id > %s", (last_id,))
        new_rows = j_cursor.fetchall()

        print(f"‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà {len(new_rows)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏à‡∏∞ Sync...")

        # üîÑ Insert ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤ Railway
        for row in new_rows:
            columns = ", ".join(row.keys())
            placeholders = ", ".join(["%s"] * len(row))
            values = tuple(row.values())

            sql = f"INSERT INTO product ({columns}) VALUES ({placeholders})"
            r_cursor.execute(sql, values)

        railway_conn.commit()
        print("‚úÖ Sync ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")

        # ‚úÖ ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô log success
        now = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        end_time = time.time()
        elapsed = round(end_time - start_time, 2)

        with open("sync_log.txt", "a", encoding="utf-8") as log_file:
            log_file.write(f"[{now}] ‚úÖ Sync ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à {len(new_rows)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤ {elapsed} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ\n")

except Exception as e:
    print("‚ùå Error:", e)
    now = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    with open("sync_log.txt", "a", encoding="utf-8") as log_file:
        log_file.write(f"[{now}] ‚ùå ERROR: {str(e)}\n")

finally:
    jigsaw_conn.close()
    railway_conn.close()
